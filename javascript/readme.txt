■JavaScript事情
・サーバーサイドJavaScript
　Node.js
　Express
　Socket.IO
　Sequelize：シィークゥアラァィズ(DB操作)

・SSR (Server Side Rendering) サーバー側でJavaScriptを実行
　Node.js + Next.js(React)
　Nuxt.js(Vue.js)
　Angular Universal (Angular)

・CSR (Client Side Rendering) クライアント側でJavaScriptを実行

・SPA (Single Page Application)
　Nuxt.jsのモード → SPA

・Next.js開発環境

・Nuxt.js(ナクスト)開発環境
①サーバーサイドフレームワークの選択
　こだわりがなければデフォルトの「None(Nuxt default server)」でいいです。
②UIフレームワークの選択
　デフォルトの「None」で問題ありません。
③Nuxt.jsのモード選択
　デフォルト値「universal」を選択することをオススメします。
　universalはサーバーサイドレンダリングに加え、クライアントでのナビゲーションを行うモードです。
　spaはサーバーサイドレンダリングを行わない（クライアントでのナビゲーションのみ）モードです。

・koa.js
　Node.jsの新しいWebFramework
　express.jsが有名ですが、その開発メンバーが開発しているフレームワークです。

・CreateJs
　Create.jsを使うと、HTML5のCanvas技術を用いてリッチな描画表現ができます。

■jQuery で作るシングルページ・アプリケーション(SPA) 70行で動くサンプル付き
　https://qiita.com/Web_akira/items/291de76be597506cf3e8

